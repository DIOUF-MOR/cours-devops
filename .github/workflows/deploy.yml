# .github/workflows/deploy.yml
name: Deploy Spring Boot App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout du code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Setup Java 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Cache Maven dependencies
      #- name: Cache Maven packages
      #  uses: actions/cache@v3
      #  with:
      #    path: ~/.m2
      #    key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      #    restore-keys: ${{ runner.os }}-m2

      # 4. Build avec Maven
      #- name: Build with Maven
      #  run: mvn clean compile package

      # 5. Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ github.repository }}:${{ github.sha }} .

      # 6. Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_SECRET }}

      # 7. Push to Docker Hub
      - name: Push to Docker Hub
        run: |
          docker tag ${{ github.repository }}:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/spring-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-app:latest

      # 8. Deploy to server (exemple avec SSH)
      #- name: Deploy to server
      #  uses: appleboy/ssh-action@v1.0.0
      # with:
      #    host: ${{ secrets.HOST }}
      #    username: ${{ secrets.USERNAME }}
      #    key: ${{ secrets.SSH_KEY }}
      #    script: |
      #      docker pull ${{ secrets.DOCKER_USERNAME }}/spring-app:latest
      #      docker stop spring-app || true
      #      docker rm spring-app || true
      #      docker run -d --name spring-app -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/spring-app:latest